apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        # To always recreate on update.
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        args: [ "pgbouncer-config/pgbouncer.ini" ]
        readinessProbe:
          tcpSocket:
            port: 6432
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6432
          initialDelaySeconds: 15
          periodSeconds: 10
        lifecycle:
          preStop:
            exec:
              command: ["sleep", "30"]
        resources:
          requests:
            memory: {{ .Values.resources.memoryRequest }}
          limits:
            memory: {{ .Values.resources.memoryLimit }}
        volumeMounts:
          - name: {{ .Release.Name }}-pgbouncer-config-volume
            mountPath: /home/pgbouncer/pgbouncer-config
          - name: {{ .Release.Name }}-userlist-volume
            mountPath: /home/pgbouncer/userlist.txt
            subPath: userlist.txt
      volumes:
        - name: {{ .Release.Name }}-pgbouncer-config-volume
          configMap:
            name: {{ .Release.Name }}-pgbouncer-config
            items:
              - key: pgbouncer.ini
                path: pgbouncer.ini
              {{- if eq .Values.config.authType "hba" }}
              - key: pg_hba.conf
                path: pg_hba.conf
              {{- end }}
             {{- if .Values.config.ssl.enabled }}
              - key: root.crt
                path: root.crt
              - key: server.crt
                path: server.crt
              - key: server.key
                path: server.key
             {{- end }}
        - name: {{ .Release.Name }}-userlist-volume
          secret:
            secretName: {{ .Release.Name }}-userlist-secret
            items:
              - key: userlist.txt
                path: userlist.txt
      restartPolicy: Always
