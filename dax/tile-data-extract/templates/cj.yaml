apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
spec:
  schedule: "{{ .Values.schedule }}"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          volumes:
            - name: {{ .Release.Name }}-{{ .Chart.Name }}-mnt
              configMap:
                name: {{ .Release.Name }}-{{ .Chart.Name }}
                items:
                  - key: appsettings
                    path: appsettings.json
          containers:
            - name: tile-data-extract
              image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
              imagePullPolicy: IfNotPresent
              env:
                - name: FILE_TO_UPLOAD_PATH
                  value: {{ .Values.appsettings.settings.outputFilePath }}
                - name: FILE_SERVER_URI
                  value: {{ .Values.fileServer.uri }}
                - name: FILE_SERVER_USERNAME
                  value: {{ .Values.fileServer.username }}
                - name: FILE_SERVER_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: fileServerPassword
                      name: {{ .Release.Name }}-{{ .Chart.Name }}-secret
              volumeMounts:
              - name: {{ .Release.Name }}-{{ .Chart.Name }}-mnt
                mountPath: /app/appsettings.json
                subPath: appsettings.json
              command:
                - /bin/sh
                - -c
                - "dotnet TileDataExtract.dll && \
                   curl -u $(FILE_SERVER_USERNAME):$(FILE_SERVER_PASSWORD) -F 'file=@$(FILE_TO_UPLOAD_PATH)' '$(FILE_SERVER_URI)/?upload'"
          restartPolicy: Never
