apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        # To always recreate on update.
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
        readinessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - cat
            - /tmp/healthy
          initialDelaySeconds: 15
          periodSeconds: 15
        env:
        - name: SERILOG__MINIMUMLEVEL
          value: {{ .Values.loglevel }}

        - name: APPLICATION__APPLICATIONNAME
          value: {{ .Values.application.applicationName }}
        - name: APPLICATION__TOLERANCE
          value: "{{ .Values.application.tolerance }}"
        - name: APPLICATION__SENDGEOGRAPHICALAREAUPDATEDNOTIFICATION
          value: "{{ .Values.application.sendGeographicalAreaUpdatedNotification }}"
        - name: APPLICATION__ENABLESEGMENTENDSAUTOSNAPPINGTOROUTENODE
          value: "{{ .Values.application.enableSegmentEndsAutoSnappingToRouteNode }}"
        - name: APPLICATION__APIGATEWAYHOST
          value: {{ .Values.application.apiGatewayHost }}

        - name: POSTGIS__HOST
          value: {{ .Values.postgis.host }}
        - name: POSTGIS__PORT
          value: "5432"
        - name: POSTGIS__DATABASE
          value: {{ .Values.postgis.database }}
        - name: POSTGIS__USERNAME
          value: {{ .Values.postgis.username }}
        - name: POSTGIS__PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgisPassword
              name: {{ .Release.Name }}-secret

        - name: NOTIFICATIONSERVER__DOMAIN
          value: {{ .Values.notificationServer.domain }}
        - name: NOTIFICATIONSERVER__PORT
          value: "{{ .Values.notificationServer.port }}"

        - name: EVENTSTORE__CONNECTIONSTRING
          valueFrom:
            secretKeyRef:
              key: eventStoreConnectionString
              name: {{ .Release.Name }}-secret

      restartPolicy: Always
